# Generated by Django 4.1 on 2024-04-12 06:14

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Gift',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=400)),
                ('image_url', models.FileField(upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='IMEINO',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imei_no', models.CharField(max_length=400)),
                ('phone_model', models.CharField(blank=True, max_length=400)),
                ('used', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='MobilePhone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_model', models.CharField(max_length=400)),
            ],
        ),
        migrations.CreateModel(
            name='RechargeCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cardno', models.CharField(max_length=400)),
                ('provider', models.CharField(choices=[('Ncell', 'Ncell'), ('Ntc', 'Ntc'), ('Smart Cell', 'Smart Cell'), ('Others', 'Others')], max_length=400)),
                ('amount', models.IntegerField(choices=[(50, '50'), (100, '100'), (200, '200'), (500, '500')])),
                ('image', models.ImageField(blank=True, null=True, upload_to='recharge_card_images/')),
                ('is_assigned', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='RechargeCardOffer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('quantity', models.IntegerField(blank=True, null=True)),
                ('amount', models.IntegerField(choices=[(50, '50'), (100, '100'), (200, '200'), (500, '500')], default=50)),
                ('provider', models.CharField(choices=[('Ncell', 'Ncell'), ('Ntc', 'Ntc'), ('Smart Cell', 'Smart Cell'), ('Others', 'Others')], default='Ncell', max_length=400)),
                ('type_of_offer', models.CharField(choices=[('After every certain sale', 'After every certain sale'), ('Weekly Offer', 'Weekly Offer')], max_length=800)),
                ('offer_condition_value', models.CharField(blank=True, max_length=500)),
                ('sale_numbers', models.JSONField(blank=True, null=True)),
            ],
            options={
                'ordering': ('start_date',),
            },
        ),
        migrations.CreateModel(
            name='Sales',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sales_count', models.IntegerField(default=0)),
                ('date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Offers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('type_of_offer', models.CharField(choices=[('After every certain sale', 'After every certain sale'), ('At certain sale position', 'At certain sale position'), ('Weekly Offer', 'Weekly Offer'), ('V30 Offer', 'V30 Offer'), ('VTop Offer', 'VTop Offer')], max_length=800)),
                ('validto', models.CharField(choices=[('V Series Offer', 'V Series Offer'), ('Y Series Offer', 'Y Series Offer'), ('All', 'All')], default='All', max_length=800)),
                ('offer_condition_value', models.CharField(blank=True, max_length=500)),
                ('quantity', models.IntegerField()),
                ('sale_numbers', models.JSONField(blank=True, null=True)),
                ('priority', models.IntegerField(default=0)),
                ('gift', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gifts.gift')),
            ],
            options={
                'ordering': ('start_date',),
            },
        ),
        migrations.CreateModel(
            name='FixOffer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imei_no', models.CharField(max_length=400)),
                ('quantity', models.IntegerField()),
                ('gift', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gifts.gift')),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_name', models.CharField(max_length=400)),
                ('shop_name', models.TextField()),
                ('just_passed_see', models.BooleanField(default=False)),
                ('see_admit_card', models.FileField(blank=True, null=True, upload_to='')),
                ('sold_area', models.CharField(max_length=800)),
                ('phone_number', models.CharField(max_length=400)),
                ('phone_model', models.CharField(max_length=400)),
                ('sale_status', models.CharField(default='SOLD', max_length=400)),
                ('prize_details', models.CharField(default='Happy Dashain and Tihar', max_length=900)),
                ('imei', models.CharField(max_length=400)),
                ('date_of_purchase', models.DateField(auto_now_add=True)),
                ('how_know_about_campaign', models.CharField(choices=[('Facebook Ads', 'Facebook Ads'), ('Reatil Shop', 'Reatil Shop'), ('Google Ads', 'Google Ads'), ('Others', 'Others')], max_length=800)),
                ('ntc_recharge_card', models.BooleanField(default=False)),
                ('amount_of_card', models.IntegerField(default=50)),
                ('profession', models.CharField(default='None', max_length=400)),
                ('gift', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='gifts.gift')),
                ('recharge_card', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='recharge_card', to='gifts.rechargecard')),
            ],
            options={
                'ordering': ('-date_of_purchase',),
            },
        ),
    ]
